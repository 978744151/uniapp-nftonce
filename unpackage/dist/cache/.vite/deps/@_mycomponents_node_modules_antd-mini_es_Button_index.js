// ../../../../../../Users/tt/Desktop/work/interview/nftApp/NFTTOOLS/mycomponents/node_modules/antd-mini/es/_util/fmtEvent.js
function fmtEvent(props, e) {
  if (e === void 0) {
    e = {};
  }
  var dataset = {};
  for (var key in props) {
    if (/data-/gi.test(key)) {
      dataset[key.replace(/data-/gi, "")] = props[key];
    }
  }
  return Object.assign({}, e, {
    currentTarget: { dataset },
    target: { dataset, targetDataset: dataset }
  });
}

// ../../../../../../Users/tt/Desktop/work/interview/nftApp/NFTTOOLS/mycomponents/node_modules/antd-mini/es/Button/props.js
var ButtonDefaultProps = {
  type: "default",
  formType: "button",
  size: "medium",
  aide: false
};

// ../../../../../../Users/tt/Desktop/work/interview/nftApp/NFTTOOLS/mycomponents/node_modules/antd-mini/es/Button/index.js
Component({
  props: ButtonDefaultProps,
  methods: {
    onTap: function(e) {
      var _a = this.props, onTap = _a.onTap, disabled = _a.disabled, loading = _a.loading, onDisabledTap = _a.onDisabledTap;
      if (disabled && onDisabledTap) {
        var event_1 = fmtEvent(this.props, e);
        onDisabledTap(event_1);
      }
      if (onTap && !disabled && !loading) {
        var event_2 = fmtEvent(this.props, e);
        return onTap(event_2);
      }
    },
    catchTap: function(e) {
      var _a = this.props, catchTap = _a.catchTap, disabled = _a.disabled, loading = _a.loading, onDisabledTap = _a.onDisabledTap;
      if (disabled && onDisabledTap) {
        var event_3 = fmtEvent(this.props, e);
        onDisabledTap(event_3);
      }
      if (catchTap && !disabled && !loading) {
        var event_4 = fmtEvent(this.props, e);
        return catchTap(event_4);
      }
    },
    onGetAuthorize: function(e) {
      if (this.props.onGetAuthorize) {
        this.props.onGetAuthorize(fmtEvent(this.props, e));
      }
    },
    onFollowLifestyle: function(e) {
      if (this.props.onFollowLifestyle) {
        this.props.onFollowLifestyle(fmtEvent(this.props, e));
      }
    },
    onError: function(e) {
      if (this.props.onError) {
        this.props.onError(fmtEvent(this.props, e));
      }
    },
    onGetUserInfo: function(e) {
      if (this.props.onGetUserInfo) {
        this.props.onGetUserInfo(fmtEvent(this.props, e));
      }
    },
    onGetPhoneNumber: function(e) {
      if (this.props.onGetPhoneNumber) {
        this.props.onGetPhoneNumber(fmtEvent(this.props, e));
      }
    }
  }
});
//# sourceMappingURL=@_mycomponents_node_modules_antd-mini_es_Button_index.js.map
